@model MVCNahodneCislo.Models.Kalkulacka

@{
	ViewBag.Title = "Index";
}

<h2>Kalkulacka</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>
			Kalkulacka
			@if (ViewBag.Jmeno != null)
			{<text> pro @ViewBag.Jmeno</text>}</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Cislo1, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Cislo1, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Cislo1, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Cislo2, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Cislo2, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Cislo2, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Operace, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Operace, new SelectList(Model.MozneOperace, "Value", "Text"))
				@Html.ValidationMessageFor(model => model.Operace, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Vypocitej" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<p style="font-size: 1.5em;">Vysledek: @Model.Vysledek</p>

<div>
	@Html.ActionLink("Reset", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
